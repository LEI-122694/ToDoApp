on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

name: SonarQube Analysis

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    steps:
      # Faz checkout do código
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # recomendado para análise completa

      # Executa a análise SonarQube
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=LEI-122694_ToDoApp
            -Dsonar.organization=lei-122694

      # Verifica o resultado do Quality Gate
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Apenas imprime o resultado do Quality Gate (opcional)
      - name: "Show SonarQube Quality Gate Status"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
